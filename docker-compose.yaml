version: '3.7'

networks:
  discovery-network:
  image-network:
  avatar-network:
  category-network:
  content-network:

services:
  discovery-service:
    image: discovery-service:0.0.1
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    networks:
      - discovery-network
    ports:
      - "8761:8761"
    environment:
      - DEPLOYMENT_ENV
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/discovery/service/log:/var/log/discovery:rw

  image-db:
    image: image-db:0.0.1
    build:
      context: ./image-service/db
      dockerfile: Dockerfile
    container_name: image-db
    networks:
      - image-network
    ports:
      - "27018:27017"
    environment:
      - DEPLOYMENT_ENV
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/image/db/data:/data/db:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/image/db/log:/var/log/mongodb:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/image/secrets:/data/secrets:ro
  image-service:
    image: image-service:0.0.1
    build:
      context: ./image-service
      dockerfile: Dockerfile
    container_name: image-service
    depends_on:
      - image-db
      - discovery-service
    networks:
      - image-network
      - discovery-network
    ports:
      - "8082:8082"
    environment:
      - DEPLOYMENT_ENV
      - SPRING_PROFILES_ACTIVE=${DEPLOYMENT_ENV}
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/image/service/log:/var/log/image:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/image/secrets:/data/secrets:ro

  avatar-db:
    image: avatar-db:0.0.1
    build:
      context: ./avatar-service/db
      dockerfile: Dockerfile
    container_name: avatar-db
    networks:
      - avatar-network
    ports:
      - "27019:27017"
    environment:
      - DEPLOYMENT_ENV
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/avatar/db/data:/data/db:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/avatar/db/log:/var/log/mongodb:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/avatar/secrets:/data/secrets:ro
  avatar-service:
    image: avatar-service:0.0.1
    build:
      context: ./avatar-service
      dockerfile: Dockerfile
    container_name: avatar-service
    depends_on:
      - avatar-db
      - discovery-service
    networks:
      - avatar-network
      - discovery-network
    ports:
      - "8083:8083"
    environment:
      - DEPLOYMENT_ENV
      - SPRING_PROFILES_ACTIVE=${DEPLOYMENT_ENV}
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/avatar/service/log:/var/log/avatar:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/avatar/secrets:/data/secrets:ro

  category-db:
    image: category-db:0.0.1
    build:
      context: ./category-service/db
      dockerfile: Dockerfile
    container_name: category-db
    networks:
      - category-network
    ports:
      - "27020:27017"
    environment:
      - DEPLOYMENT_ENV
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/category/db/data:/data/db:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/category/db/log:/var/log/mongodb:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/category/secrets:/data/secrets:ro
  category-service:
    image: category-service:0.0.1
    build:
      context: ./category-service
      dockerfile: Dockerfile
    container_name: category-service
    depends_on:
      - category-db
      - discovery-service
    networks:
      - category-network
      - discovery-network
    ports:
      - "8084:8084"
    environment:
      - DEPLOYMENT_ENV
      - SPRING_PROFILES_ACTIVE=${DEPLOYMENT_ENV}
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/category/service/log:/var/log/category:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/category/secrets:/data/secrets:ro

  content-db:
    image: content-db:0.0.1
    build:
      context: ./content-service/db
      dockerfile: Dockerfile
    container_name: content-db
    networks:
      - content-network
    ports:
      - "27021:27017"
    environment:
      - DEPLOYMENT_ENV
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/content/db/data:/data/db:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/content/db/log:/var/log/mongodb:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/content/secrets:/data/secrets:ro
  content-service:
    image: content-service:0.0.1
    build:
      context: ./content-service
      dockerfile: Dockerfile
    container_name: content-service
    depends_on:
      - content-db
      - discovery-service
    networks:
      - content-network
      - discovery-network
    ports:
      - "8081:8081"
    environment:
      - DEPLOYMENT_ENV
      - SPRING_PROFILES_ACTIVE=${DEPLOYMENT_ENV}
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/content/service/log:/var/log/content:rw
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/content/secrets:/data/secrets:ro

  graphql-service:
    image: graphql-service:0.0.1
    build:
      context: ./graphql-service
      dockerfile: Dockerfile
    container_name: graphql-service
    depends_on:
      - image-service
      - avatar-service
      - category-service
      - content-service
      - discovery-service
    networks:
      - discovery-network
    ports:
      - "8080:8080"
    environment:
      - DEPLOYMENT_ENV
      - SPRING_PROFILES_ACTIVE=${DEPLOYMENT_ENV}
    volumes:
      - /mnt/disks/${DEPLOYMENT_ENV}-contentually/graphql/service/log:/var/log/graphql:rw
